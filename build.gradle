buildscript {
    ext {
        corda_group = 'com.r3.corda'
        corda_release_version = '3.2'
//        corda_release_version = '4.0-RC04'
        corda_gradle_plugins_version = '4.0.39'
//        corda_gradle_plugins_version = '3.2.1'
        kotlin_version = '1.2.71'
        quasar_version = '0.7.6'

        allRepositories = {
            mavenLocal()
            jcenter()
            mavenCentral()
            maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
            maven {
                url 'https://nexus.b3i.io/repository/maven-public'
                credentials {
                    username = nexusUser
                    password = nexusPassword
                }
            }
            maven {
                url 'https://nexus.b3i.io/repository/r3-local'
                credentials {
                    username = nexusUserR3
                    password = nexusPasswordR3
                }
            }
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }

}
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
}

group 'com.stephenhouston.corda'
version '1.0-SNAPSHOT'

repositories allRepositories

ext {
    withoutKotlin = {
        exclude group: 'org.jetbrains.kotlin'
    }
}

apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.quasar-utils'

version = rootProject.version

dependencies {
    compile "io.github.microutils:kotlin-logging:1.6.22", withoutKotlin
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre7'
    }
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version", withoutKotlin

    cordaCompile "$corda_group:corda-core:$corda_release_version", withoutKotlin
    cordaRuntime "$corda_group:corda:$corda_release_version", withoutKotlin

    testCompile "$corda_group:corda-node-driver:$corda_release_version"
    testCompile "$corda_group:corda-test-utils:$corda_release_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
//        duplicatesStrategy = DuplicatesStrategy.FAIL
    duplicatesStrategy = DuplicatesStrategy.WARN
}

configurations {
    compile.resolutionStrategy {
        failOnVersionConflict()

        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.jetbrains.kotlin') {
                details.useVersion kotlin_version
            }
        }
        force "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        force "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
        force "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

        dependencySubstitution {
            substitute module('org.jetbrains.kotlin:kotlin-stdlib-jre8:1.1.60') with module("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
            substitute module('org.jetbrains.kotlin:kotlin-stdlib-jre7:1.1.60') with module("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version")
        }
    }
}